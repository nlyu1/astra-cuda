# CMAKE generated file: DO NOT EDIT!
# Generated by "Ninja" Generator, CMake Version 4.0

# This file contains all the rules used to get the outputs files
# built from the input files.
# It is included in the main 'build.ninja'.

# =============================================================================
# Project: astra-cuda
# Configurations: Release
# =============================================================================
# =============================================================================

#############################################
# Rule for generating CXX dependencies.

rule CXX_SCAN__main_Release
  depfile = $DEP_FILE
  command = /home/nlyu/miniconda3/envs/astra/bin/x86_64-conda-linux-gnu-c++ $DEFINES $INCLUDES $FLAGS -E -x c++ $in -MT $DYNDEP_INTERMEDIATE_FILE -MD -MF $DEP_FILE -fmodules-ts -fdeps-file=$DYNDEP_INTERMEDIATE_FILE -fdeps-target=$OBJ_FILE -fdeps-format=p1689r5 -o $PREPROCESSED_OUTPUT_FILE
  description = Scanning $in for CXX dependencies


#############################################
# Rule to generate ninja dyndep files for CXX.

rule CXX_DYNDEP__main_Release
  command = /usr/local/bin/cmake -E cmake_ninja_dyndep --tdi=CMakeFiles/main.dir/CXXDependInfo.json --lang=CXX --modmapfmt=gcc --dd=$out @$out.rsp
  description = Generating CXX dyndep file $out
  rspfile = $out.rsp
  rspfile_content = $in
  restat = 1


#############################################
# Rule for compiling CXX files.

rule CXX_COMPILER__main_scanned_Release
  depfile = $DEP_FILE
  deps = gcc
  command = ${LAUNCHER}${CODE_CHECK}/home/nlyu/miniconda3/envs/astra/bin/x86_64-conda-linux-gnu-c++ $DEFINES $INCLUDES $FLAGS -MD -MT $out -MF $DEP_FILE -fmodules-ts -fmodule-mapper=$DYNDEP_MODULE_MAP_FILE -MD -fdeps-format=p1689r5 -x c++ -o $out -c $in
  description = Building CXX object $out


#############################################
# Rule for compiling CXX files.

rule CXX_COMPILER__main_unscanned_Release
  depfile = $DEP_FILE
  deps = gcc
  command = ${LAUNCHER}${CODE_CHECK}/home/nlyu/miniconda3/envs/astra/bin/x86_64-conda-linux-gnu-c++ $DEFINES $INCLUDES $FLAGS -MD -MT $out -MF $DEP_FILE -o $out -c $in
  description = Building CXX object $out


#############################################
# Rule for linking CXX executable.

rule CXX_EXECUTABLE_DEVICE_LINKER__main_Release
  command = /usr/local/cuda/bin/nvcc -forward-unknown-to-host-compiler $LANGUAGE_COMPILE_FLAGS $LINK_FLAGS -Xcompiler=-fPIC -Wno-deprecated-gpu-targets -shared -dlink $in -o $TARGET_FILE $LINK_PATH $LINK_LIBRARIES
  description = Linking CXX executable $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for linking CXX executable.

rule CXX_EXECUTABLE_LINKER__main_Release
  command = $PRE_LINK && /home/nlyu/miniconda3/envs/astra/bin/x86_64-conda-linux-gnu-c++ $FLAGS $LINK_FLAGS $in -o $TARGET_FILE $LINK_PATH $LINK_LIBRARIES && $POST_BUILD
  description = Linking CXX executable $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for running custom commands.

rule CUSTOM_COMMAND
  command = $COMMAND
  description = $DESC


#############################################
# Rule for compiling CXX files.

rule CXX_COMPILER__fmt_unscanned_Release
  depfile = $DEP_FILE
  deps = gcc
  command = ${LAUNCHER}${CODE_CHECK}/home/nlyu/miniconda3/envs/astra/bin/x86_64-conda-linux-gnu-c++ $DEFINES $INCLUDES $FLAGS -MD -MT $out -MF $DEP_FILE -o $out -c $in
  description = Building CXX object $out


#############################################
# Rule for linking CXX static library.

rule CXX_STATIC_LIBRARY_LINKER__fmt_Release
  command = $PRE_LINK && /usr/local/bin/cmake -E rm -f $TARGET_FILE && "/home/nlyu/miniconda3/envs/astra/bin/x86_64-conda-linux-gnu-gcc-ar" qc $TARGET_FILE $LINK_FLAGS $in && "/home/nlyu/miniconda3/envs/astra/bin/x86_64-conda-linux-gnu-gcc-ranlib" $TARGET_FILE && $POST_BUILD
  description = Linking CXX static library $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for generating CXX dependencies.

rule CXX_SCAN__astra_utils_Release
  depfile = $DEP_FILE
  command = /home/nlyu/miniconda3/envs/astra/bin/x86_64-conda-linux-gnu-c++ $DEFINES $INCLUDES $FLAGS -E -x c++ $in -MT $DYNDEP_INTERMEDIATE_FILE -MD -MF $DEP_FILE -fmodules-ts -fdeps-file=$DYNDEP_INTERMEDIATE_FILE -fdeps-target=$OBJ_FILE -fdeps-format=p1689r5 -o $PREPROCESSED_OUTPUT_FILE
  description = Scanning $in for CXX dependencies


#############################################
# Rule to generate ninja dyndep files for CXX.

rule CXX_DYNDEP__astra_utils_Release
  command = /usr/local/bin/cmake -E cmake_ninja_dyndep --tdi=utils/CMakeFiles/astra_utils.dir/CXXDependInfo.json --lang=CXX --modmapfmt=gcc --dd=$out @$out.rsp
  description = Generating CXX dyndep file $out
  rspfile = $out.rsp
  rspfile_content = $in
  restat = 1


#############################################
# Rule for compiling CXX files.

rule CXX_COMPILER__astra_utils_scanned_Release
  depfile = $DEP_FILE
  deps = gcc
  command = ${LAUNCHER}${CODE_CHECK}/home/nlyu/miniconda3/envs/astra/bin/x86_64-conda-linux-gnu-c++ $DEFINES $INCLUDES $FLAGS -MD -MT $out -MF $DEP_FILE -fmodules-ts -fmodule-mapper=$DYNDEP_MODULE_MAP_FILE -MD -fdeps-format=p1689r5 -x c++ -o $out -c $in
  description = Building CXX object $out


#############################################
# Rule for compiling CXX files.

rule CXX_COMPILER__astra_utils_unscanned_Release
  depfile = $DEP_FILE
  deps = gcc
  command = ${LAUNCHER}${CODE_CHECK}/home/nlyu/miniconda3/envs/astra/bin/x86_64-conda-linux-gnu-c++ $DEFINES $INCLUDES $FLAGS -MD -MT $out -MF $DEP_FILE -o $out -c $in
  description = Building CXX object $out


#############################################
# Rule for linking CXX static library.

rule CXX_STATIC_LIBRARY_LINKER__astra_utils_Release
  command = $PRE_LINK && /usr/local/bin/cmake -E rm -f $TARGET_FILE && "/home/nlyu/miniconda3/envs/astra/bin/x86_64-conda-linux-gnu-gcc-ar" qc $TARGET_FILE $LINK_FLAGS $in && "/home/nlyu/miniconda3/envs/astra/bin/x86_64-conda-linux-gnu-gcc-ranlib" $TARGET_FILE && $POST_BUILD
  description = Linking CXX static library $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for compiling CUDA files.

rule CUDA_COMPILER__order_matching_unscanned_Release
  depfile = $DEP_FILE
  deps = gcc
  command = ${LAUNCHER}${CODE_CHECK}/usr/local/cuda/bin/nvcc -forward-unknown-to-host-compiler $DEFINES $INCLUDES $FLAGS -MD -MT $out -MF $DEP_FILE -x cu -rdc=true -c $in -o $out
  description = Building CUDA object $out


#############################################
# Rule for linking CXX static library.

rule CXX_STATIC_LIBRARY_LINKER__order_matching_Release
  command = $PRE_LINK && /usr/local/bin/cmake -E rm -f $TARGET_FILE && "/home/nlyu/miniconda3/envs/astra/bin/x86_64-conda-linux-gnu-gcc-ar" qc $TARGET_FILE $LINK_FLAGS $in && "/home/nlyu/miniconda3/envs/astra/bin/x86_64-conda-linux-gnu-gcc-ranlib" $TARGET_FILE && $POST_BUILD
  description = Linking CXX static library $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for compiling CUDA files.

rule CUDA_COMPILER__market_tests_unscanned_Release
  depfile = $DEP_FILE
  deps = gcc
  command = ${LAUNCHER}${CODE_CHECK}/usr/local/cuda/bin/nvcc -forward-unknown-to-host-compiler $DEFINES $INCLUDES $FLAGS -MD -MT $out -MF $DEP_FILE -x cu -c $in -o $out
  description = Building CUDA object $out


#############################################
# Rule for linking CXX executable.

rule CXX_EXECUTABLE_DEVICE_LINKER__market_tests_Release
  command = /usr/local/cuda/bin/nvcc -forward-unknown-to-host-compiler $LANGUAGE_COMPILE_FLAGS $LINK_FLAGS -Xcompiler=-fPIC -Wno-deprecated-gpu-targets -shared -dlink $in -o $TARGET_FILE $LINK_PATH $LINK_LIBRARIES
  description = Linking CXX executable $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for linking CXX executable.

rule CXX_EXECUTABLE_LINKER__market_tests_Release
  command = $PRE_LINK && /home/nlyu/miniconda3/envs/astra/bin/x86_64-conda-linux-gnu-c++ $FLAGS $LINK_FLAGS $in -o $TARGET_FILE $LINK_PATH $LINK_LIBRARIES && $POST_BUILD
  description = Linking CXX executable $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for generating CXX dependencies.

rule CXX_SCAN__astra_utils_tests_Release
  depfile = $DEP_FILE
  command = /home/nlyu/miniconda3/envs/astra/bin/x86_64-conda-linux-gnu-c++ $DEFINES $INCLUDES $FLAGS -E -x c++ $in -MT $DYNDEP_INTERMEDIATE_FILE -MD -MF $DEP_FILE -fmodules-ts -fdeps-file=$DYNDEP_INTERMEDIATE_FILE -fdeps-target=$OBJ_FILE -fdeps-format=p1689r5 -o $PREPROCESSED_OUTPUT_FILE
  description = Scanning $in for CXX dependencies


#############################################
# Rule to generate ninja dyndep files for CXX.

rule CXX_DYNDEP__astra_utils_tests_Release
  command = /usr/local/bin/cmake -E cmake_ninja_dyndep --tdi=tests/CMakeFiles/astra_utils_tests.dir/CXXDependInfo.json --lang=CXX --modmapfmt=gcc --dd=$out @$out.rsp
  description = Generating CXX dyndep file $out
  rspfile = $out.rsp
  rspfile_content = $in
  restat = 1


#############################################
# Rule for compiling CXX files.

rule CXX_COMPILER__astra_utils_tests_scanned_Release
  depfile = $DEP_FILE
  deps = gcc
  command = ${LAUNCHER}${CODE_CHECK}/home/nlyu/miniconda3/envs/astra/bin/x86_64-conda-linux-gnu-c++ $DEFINES $INCLUDES $FLAGS -MD -MT $out -MF $DEP_FILE -fmodules-ts -fmodule-mapper=$DYNDEP_MODULE_MAP_FILE -MD -fdeps-format=p1689r5 -x c++ -o $out -c $in
  description = Building CXX object $out


#############################################
# Rule for compiling CXX files.

rule CXX_COMPILER__astra_utils_tests_unscanned_Release
  depfile = $DEP_FILE
  deps = gcc
  command = ${LAUNCHER}${CODE_CHECK}/home/nlyu/miniconda3/envs/astra/bin/x86_64-conda-linux-gnu-c++ $DEFINES $INCLUDES $FLAGS -MD -MT $out -MF $DEP_FILE -o $out -c $in
  description = Building CXX object $out


#############################################
# Rule for linking CXX executable.

rule CXX_EXECUTABLE_DEVICE_LINKER__astra_utils_tests_Release
  command = /usr/local/cuda/bin/nvcc -forward-unknown-to-host-compiler $LANGUAGE_COMPILE_FLAGS $LINK_FLAGS -Xcompiler=-fPIC -Wno-deprecated-gpu-targets -shared -dlink $in -o $TARGET_FILE $LINK_PATH $LINK_LIBRARIES
  description = Linking CXX executable $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for linking CXX executable.

rule CXX_EXECUTABLE_LINKER__astra_utils_tests_Release
  command = $PRE_LINK && /home/nlyu/miniconda3/envs/astra/bin/x86_64-conda-linux-gnu-c++ $FLAGS $LINK_FLAGS $in -o $TARGET_FILE $LINK_PATH $LINK_LIBRARIES && $POST_BUILD
  description = Linking CXX executable $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for generating CXX dependencies.

rule CXX_SCAN__benchmark_market_Release
  depfile = $DEP_FILE
  command = /home/nlyu/miniconda3/envs/astra/bin/x86_64-conda-linux-gnu-c++ $DEFINES $INCLUDES $FLAGS -E -x c++ $in -MT $DYNDEP_INTERMEDIATE_FILE -MD -MF $DEP_FILE -fmodules-ts -fdeps-file=$DYNDEP_INTERMEDIATE_FILE -fdeps-target=$OBJ_FILE -fdeps-format=p1689r5 -o $PREPROCESSED_OUTPUT_FILE
  description = Scanning $in for CXX dependencies


#############################################
# Rule to generate ninja dyndep files for CXX.

rule CXX_DYNDEP__benchmark_market_Release
  command = /usr/local/bin/cmake -E cmake_ninja_dyndep --tdi=tests/CMakeFiles/benchmark_market.dir/CXXDependInfo.json --lang=CXX --modmapfmt=gcc --dd=$out @$out.rsp
  description = Generating CXX dyndep file $out
  rspfile = $out.rsp
  rspfile_content = $in
  restat = 1


#############################################
# Rule for compiling CXX files.

rule CXX_COMPILER__benchmark_market_scanned_Release
  depfile = $DEP_FILE
  deps = gcc
  command = ${LAUNCHER}${CODE_CHECK}/home/nlyu/miniconda3/envs/astra/bin/x86_64-conda-linux-gnu-c++ $DEFINES $INCLUDES $FLAGS -MD -MT $out -MF $DEP_FILE -fmodules-ts -fmodule-mapper=$DYNDEP_MODULE_MAP_FILE -MD -fdeps-format=p1689r5 -x c++ -o $out -c $in
  description = Building CXX object $out


#############################################
# Rule for compiling CXX files.

rule CXX_COMPILER__benchmark_market_unscanned_Release
  depfile = $DEP_FILE
  deps = gcc
  command = ${LAUNCHER}${CODE_CHECK}/home/nlyu/miniconda3/envs/astra/bin/x86_64-conda-linux-gnu-c++ $DEFINES $INCLUDES $FLAGS -MD -MT $out -MF $DEP_FILE -o $out -c $in
  description = Building CXX object $out


#############################################
# Rule for linking CXX executable.

rule CXX_EXECUTABLE_DEVICE_LINKER__benchmark_market_Release
  command = /usr/local/cuda/bin/nvcc -forward-unknown-to-host-compiler $LANGUAGE_COMPILE_FLAGS $LINK_FLAGS -Xcompiler=-fPIC -Wno-deprecated-gpu-targets -shared -dlink $in -o $TARGET_FILE $LINK_PATH $LINK_LIBRARIES
  description = Linking CXX executable $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for linking CXX executable.

rule CXX_EXECUTABLE_LINKER__benchmark_market_Release
  command = $PRE_LINK && /home/nlyu/miniconda3/envs/astra/bin/x86_64-conda-linux-gnu-c++ $FLAGS $LINK_FLAGS $in -o $TARGET_FILE $LINK_PATH $LINK_LIBRARIES && $POST_BUILD
  description = Linking CXX executable $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for generating CXX dependencies.

rule CXX_SCAN__astra_cuda_Release
  depfile = $DEP_FILE
  command = /home/nlyu/miniconda3/envs/astra/bin/x86_64-conda-linux-gnu-c++ $DEFINES $INCLUDES $FLAGS -E -x c++ $in -MT $DYNDEP_INTERMEDIATE_FILE -MD -MF $DEP_FILE -fmodules-ts -fdeps-file=$DYNDEP_INTERMEDIATE_FILE -fdeps-target=$OBJ_FILE -fdeps-format=p1689r5 -o $PREPROCESSED_OUTPUT_FILE
  description = Scanning $in for CXX dependencies


#############################################
# Rule to generate ninja dyndep files for CXX.

rule CXX_DYNDEP__astra_cuda_Release
  command = /usr/local/bin/cmake -E cmake_ninja_dyndep --tdi=pybind/CMakeFiles/astra_cuda.dir/CXXDependInfo.json --lang=CXX --modmapfmt=gcc --dd=$out @$out.rsp
  description = Generating CXX dyndep file $out
  rspfile = $out.rsp
  rspfile_content = $in
  restat = 1


#############################################
# Rule for compiling CXX files.

rule CXX_COMPILER__astra_cuda_scanned_Release
  depfile = $DEP_FILE
  deps = gcc
  command = ${LAUNCHER}${CODE_CHECK}/home/nlyu/miniconda3/envs/astra/bin/x86_64-conda-linux-gnu-c++ $DEFINES $INCLUDES $FLAGS -MD -MT $out -MF $DEP_FILE -fmodules-ts -fmodule-mapper=$DYNDEP_MODULE_MAP_FILE -MD -fdeps-format=p1689r5 -x c++ -o $out -c $in
  description = Building CXX object $out


#############################################
# Rule for compiling CXX files.

rule CXX_COMPILER__astra_cuda_unscanned_Release
  depfile = $DEP_FILE
  deps = gcc
  command = ${LAUNCHER}${CODE_CHECK}/home/nlyu/miniconda3/envs/astra/bin/x86_64-conda-linux-gnu-c++ $DEFINES $INCLUDES $FLAGS -MD -MT $out -MF $DEP_FILE -o $out -c $in
  description = Building CXX object $out


#############################################
# Rule for linking CXX shared module.

rule CXX_MODULE_LIBRARY_DEVICE_LINKER__astra_cuda_Release
  command = /usr/local/cuda/bin/nvcc -forward-unknown-to-host-compiler $LANGUAGE_COMPILE_FLAGS $LINK_FLAGS -Xcompiler=-fPIC -Wno-deprecated-gpu-targets -shared -dlink $in -o $TARGET_FILE $LINK_PATH $LINK_LIBRARIES
  description = Linking CXX shared module $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for linking CXX shared module.

rule CXX_MODULE_LIBRARY_LINKER__astra_cuda_Release
  command = $PRE_LINK && /home/nlyu/miniconda3/envs/astra/bin/x86_64-conda-linux-gnu-c++ -fPIC $LANGUAGE_COMPILE_FLAGS $ARCH_FLAGS $LINK_FLAGS -shared $SONAME_FLAG$SONAME -o $TARGET_FILE $in $LINK_PATH $LINK_LIBRARIES && $POST_BUILD
  description = Linking CXX shared module $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for re-running cmake.

rule RERUN_CMAKE
  command = /usr/local/bin/cmake --regenerate-during-build -S/home/nlyu/Code/astra-cuda/src -B/home/nlyu/Code/astra-cuda/build/build-release
  description = Re-running CMake...
  generator = 1


#############################################
# Rule for cleaning all built files.

rule CLEAN
  command = /home/nlyu/miniconda3/envs/astra/bin/ninja $FILE_ARG -t clean $TARGETS
  description = Cleaning all built files...


#############################################
# Rule for printing all primary targets available.

rule HELP
  command = /home/nlyu/miniconda3/envs/astra/bin/ninja -t targets
  description = All primary targets available:

